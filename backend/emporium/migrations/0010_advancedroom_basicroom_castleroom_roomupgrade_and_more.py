# Generated by Django 4.0.3 on 2024-09-04 01:47

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('emporium', '0009_alter_unlockablethief_randomtraits'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvancedRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Level', models.IntegerField(unique=True)),
                ('Fence_GoldBonus', models.IntegerField()),
                ('Fence_MagicSlots', models.IntegerField()),
                ('Workshop_StoneBonus', models.IntegerField()),
                ('Workshop_Defense', models.TextField()),
                ('Jeweler_GemBonus', models.IntegerField()),
                ('Jeweler_ExpedSlots', models.IntegerField()),
                ('Blacksmith_Period', models.TextField()),
                ('Artisan_Cost', models.IntegerField()),
                ('Artisan_Period', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BasicRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Level', models.IntegerField(unique=True)),
                ('Keep_Defenders', models.IntegerField()),
                ('Keep_Traps', models.IntegerField()),
                ('Bank_Gold', models.IntegerField()),
                ('Warehouse_Stone', models.IntegerField()),
                ('Scholarium_MaxLevel', models.IntegerField()),
                ('Dorm_MaxThieves', models.IntegerField()),
                ('Dorm_Recovery', models.TextField()),
                ('Cartog_Slots', models.IntegerField()),
                ('Cartog_Recovery', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CastleRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.TextField(unique=True)),
                ('UnlockThrone', models.IntegerField()),
                ('AllowedPlacement', models.TextField()),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RoomUpgrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Level', models.IntegerField(unique=True)),
                ('Stone_Basic', models.IntegerField()),
                ('Stone_Advan', models.IntegerField()),
                ('Stone_Throne', models.IntegerField()),
                ('Period_Basic', models.TextField()),
                ('Period_Advan', models.TextField()),
                ('Period_Throne', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ThroneRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Level', models.IntegerField(unique=True)),
                ('MaxRoomCount', models.IntegerField()),
                ('MaxRoomLevel', models.IntegerField()),
                ('MaxThieves', models.IntegerField()),
                ('Throne_Gold', models.IntegerField()),
                ('Throne_Stone', models.IntegerField()),
            ],
        ),
        migrations.DeleteModel(
            name='FactoryUpgrades',
        ),
        migrations.DeleteModel(
            name='SingletonUpgrades',
        ),
        migrations.DeleteModel(
            name='StorageUpgrades',
        ),
        migrations.DeleteModel(
            name='ThroneUpgrades',
        ),
        migrations.RenameField(
            model_name='unlockableitem',
            old_name='EnchantmentList',
            new_name='Enchantments',
        ),
    ]
